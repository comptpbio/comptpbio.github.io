ye = 2016
urlsearch <- sprintf('%s&lat=%.04f&lon=%.04f&ms=%.0f&ds=%.0f&ys=%.0f&me=%.0f&de=%.0f&ye=%.0f&submit=Yes',
l, lat, lon, ms, ds, ys, me, de, ye)
w <- fread(urlsearch, sep='auto', skip=14)
urlsearch
head(w)
w <- fread(urlsearch, sep='auto', skip=14, na.strings = '-99')
head(w)
ys = 2015
ye = 2015
urlsearch <- sprintf('%s&lat=%.04f&lon=%.04f&ms=%.0f&ds=%.0f&ys=%.0f&me=%.0f&de=%.0f&ye=%.0f&submit=Yes',
l, lat, lon, ms, ds, ys, me, de, ye)
w <- fread(urlsearch, sep='auto', skip=14, na.strings = '-99')
head(w)
l = 'https://power.larc.nasa.gov/cgi-bin/agro.cgi?email=&step=1'
lat = 30.9860
lon = 75.7635
ms  = 2
ds = 1
ys = seq(2010, 2016)
me = 10
de = 31
#ye = 2015
l = 'https://power.larc.nasa.gov/cgi-bin/agro.cgi?email=&step=1'
lat = 30.9860
lon = 75.7635
ms  = 2
ds = 1
ys = 2008
me = 10
de = 31
ye = 2016
urlsearch <- sprintf('%s&lat=%.04f&lon=%.04f&ms=%.0f&ds=%.0f&ys=%.0f&me=%.0f&de=%.0f&ye=%.0f&submit=Yes',
l, lat, lon, ms, ds, ys, me, de, ye)
w <- fread(urlsearch, sep='auto', skip=14, na.strings = '-99')
names(w$V1)
unique(w$V1)
unique(w$V2)
w1 <- filter(w, V2>31 & V2 < 305)
head(w1)
unique(w$V2)
unique(w1$V2)
rm(w1)
w <- filter(w, V2>31 & V2 < 305)
aggregate?
? aggregate
ww <- aggregate(V6, by = V2, data = w)
ww <- aggregate(V6 ~ V2, data = w)
ww <- aggregate(V6 ~ V2, data = w, FUN = 'mean')
head(ww)
getNASAData <- function(sl){
urlsearch <- sprintf('%s&lat=%.04f&lon=%.04f&ms=%.0f&ds=%.0f&ys=%.0f&me=%.0f&de=%.0f&ye=%.0f&submit=Yes',
l, lat, lon, ms, ds, ys, me, de, ye)
w <- fread(urlsearch, sep='auto', skip=14, na.strings = '-99')
return(w)
}
getNASAData <- function(sl){
urlsearch <- sprintf('%s&lat=%.04f&lon=%.04f&ms=%.0f&ds=%.0f&ys=%.0f&me=%.0f&de=%.0f&ye=%.0f&submit=Yes',
sl$l, sl$lat, sl$lon, sl$ms, sl$ds, sl$ys, sl$me, sl$de, sl$ye)
w <- fread(urlsearch, sep='auto', skip=14, na.strings = '-99')
return(w)
}
#' Get NASA DATA
#' @param sl are the parameters for the search
getNASAData <- function(sl){
urlsearch <- sprintf('%s&lat=%.04f&lon=%.04f&ms=%.0f&ds=%.0f&ys=%.0f&me=%.0f&de=%.0f&ye=%.0f&submit=Yes',
sl$l, sl$lat, sl$lon, sl$ms, sl$ds, sl$ys, sl$me, sl$de, sl$ye)
w <- fread(urlsearch, sep='auto', skip=14, na.strings = '-99')
return(w)
}
search_query = list()
search_query$l = 'https://power.larc.nasa.gov/cgi-bin/agro.cgi?email=&step=1'
search_query$lat = 30.9860
search_query$lon = 75.7635
search_query$ms  = 2
search_query$ds = 1
search_query$ys = 2008
search_query$me = 10
search_query$de = 31
search_query$ye = 2016
rawdata <- getNASAData(search_query)
sdata = rawdata
labelnames <- c('WEYR', 'WEDAY',  'SRAD', 'TMAX', 'TMIN', 'RAIN', 'WIND', 'TDEW', 'T2M', 'RH2M')
colnames(sdata) <- labelnames
#' Get NASA DATA
#' @param sl are the parameters for the search
getNASAData <- function(sl){
urlsearch <- sprintf('%s&lat=%.04f&lon=%.04f&ms=%.0f&ds=%.0f&ys=%.0f&me=%.0f&de=%.0f&ye=%.0f&submit=Yes',
sl$l, sl$lat, sl$lon, sl$ms, sl$ds, sl$ys, sl$me, sl$de, sl$ye)
sdata <- fread(urlsearch, sep='auto', skip=14, na.strings = '-99')
labelnames <- c('WEYR', 'WEDAY',  'SRAD', 'TMAX', 'TMIN', 'RAIN', 'WIND', 'TDEW', 'T2M', 'RH2M')
colnames(sdata) <- labelnames
return(sdata)
}
rm(w)
rm(rawdata)
rm(sdata)
rm(ww)
source('C:/anyela/repo/babycorn/make_env/data_analytics.R')
search_query = list()
search_query$l = 'https://power.larc.nasa.gov/cgi-bin/agro.cgi?email=&step=1'
search_query$lat = 30.9860
search_query$lon = 75.7635
search_query$ms  = 2
search_query$ds = 1
search_query$ys = 2008
search_query$me = 10
search_query$de = 31
search_query$ye = 2016
rawdata <- getNASAData(search_query)
head(rawdata)
sdata = rawdata
fs = 31
fe = 305
w <- filter(wsdata, V2>fs & V2 < fe)
w <- filter(sdata, V2>fs & V2 < fe)
w <- filter(sdata, RAIN>fs & RAIN < fe)
unoque(w$WEDAY)
unique(w$WEDAY)
unique(w$WEDAY)
fs
fe
head(sdata)
w <- filter(sdata, WEDAY >fs & WEDAY < fe)
unique(w$WEDAY)
ww <- aggregate(WEDAY ~ RAIN, data = w, FUN = 'mean')
head(ww)
ww <- aggregate(RAIN ~ WEDAY, data = w, FUN = 'mean')
head(ww)
yf = 2016
head(w)
subset <- filter(w, WEYR == yf)
head(subset)
subset$RAIN <- ww$RAIN
head(subset)
plot(subset$RAIN)
View(subset)
mean(2,3,0,0)
mean(2,3)
? mean
f <- lm(RAIN ~ ., data = filter(w, WEYR < 2016) )
plot(f)
p <- predict(f, filter(w, WYEAR == 2018))
p <- predict(f, filter(w, WeYR == 2018))
p <- predict(f, filter(w, WEYR == 2018))
p
? predict
p <- predict(f, filter(w, WEYR == 2016))
p
plot(p)
mean(p)
getAverage <- function(sdata, fs, fe, yf){
w <- filter(sdata, WEDAY >fs & WEDAY < fe)
ww <- aggregate(RAIN ~ WEDAY, data = w, FUN = 'mean')
subset <- filter(w, WEYR == yf)
subset$RAIN <- ww$RAIN
return(subset)
}
subdata <- getAverage(rawdata, 31, 305, 2016)
plot(subdata$RAIN)
setwd("C:/anyela/repo/interpolate_weather")
filename = 'Tavg/interim_2016-01-01to2016-01-31_Tavg.nc'
variables = c("Tavg","Uwind","Vwind", "Tdew","Tppt","Tisr")
vname = variables[1]
vname
ncin <- nc_open(filename)
rt <- getRasterStruct(ncin)
source('C:/anyela/repo/interpolate_weather/interpolate.R')
ncin <- nc_open(filename)
rt <- getRasterStruct(ncin)
rt
rt$time
filename <- 'Tppt/interim_2016-01-01to2016-01-31_Tppt.nc'
ncin <- nc_open(filename)
rt <- getRasterStruct(ncin)
timestepday <- 2
j <- changeDateFormat(rt$time)
j
getwd()
source('C:/anyela/repo/interpolate_weather/interpolate.R')
rTavg <- produceAN('Tavg/interim_2016-01-01to2016-01-31_Tavg.nc', variables[1])
rTppt <- produceFC('Tppt/interim_2016-01-01to2016-01-31_Tppt.nc')
# ------------------A simple function (EDIT: FIXED)---------------------#
Split_and_save_DF <- function(DF, split,chead){
DFlist <-lapply(seq(1, ncol(DF), split),
function(x, i){x[, i:(i+(split-1))]}, x=DF)  # Spliting your data frame by columns to get several data.frames
invisible(sapply(1:length(DFlist), function(x, i)
write.table(x[[i]], file=paste0('Grid', i, '.txt')), x=DFlist))
}
#------------------------------------------------------------------------#
DF=list();
tDF=list();
tcDF=list();
tcDF_bind=c();
#variables= list("Tavg","Uwind","Vwind", "Tdew","Tppt","Tisr")
variables= list("t2m","tp")
i=0
iyear = 2016
imonth = 1
year = toString(iyear)
month= toString(imonth)
month
DF <- read.csv('interp_t2m.csv')
head(DF)
tDF  <- t(DF)
tcDF <- tDF[-c(1, 2), ]
tcDF_bind<-rbind(tcDF_bind,tcDF)
rm(DF)
DFt2m <- read.csv('interp_t2m.csv') ## Add dummy line
DFpt <- read.csv('interp_tp.csv') ## Add dummy line
colname(DFt2m)
colnames(DFt2m)
f <- filter(DFt2m, lat = DFt2m$lat[1], lat = DFt2m$lon[1] )
f <- filter(DFt2m, lat == DFt2m$lat[1], lon == DFt2m$lon[1] )
f
f1 <- filter(DFpt, lat == DFpt$lat[1], lon == DFpt$lon[1] )
v <- cbind(f, f1)
head(v)
v <- cbind(t(f), t(f1))
v <- cbind(as.numeric(f), as.numeric(f1))
head(v)
head(f)
head(f1)
v <- cbind(as.numeric(f), as.numeric(f1))
v <- cbind(as.numeric(f), as.numeric(f1[1:34]))
head(f1)
head(v)
? filter
length(f)
names(f)
v <- cbind(date = names(f)[4:length(f)],
t2m = as.numeric(f[4:length(f)]),
Tpp = as.numeric(f1[1:34])) # 34 because of the extra day
head(v)
v <- cbind(date = names(f)[4:length(f)],
t2m = as.numeric(f[4:length(f)]),
Tpp = as.numeric(f1[4:34])) # 34 because of the extra day
head(v)
for(ix in 1:1){
f <- filter(DFt2m, lat == DFt2m$lat[ix], lon == DFt2m$lon[ix] )
f1 <- filter(DFpt, lat == DFpt$lat[ix], lon == DFpt$lon[ix] )
v <- cbind(date = names(f)[4:length(f)],
t2m = as.numeric(f[4:length(f)]),
Tpp = as.numeric(f1[4:34])) # 34 because of the extra day
print(head(v))
}
source('C:/anyela/repo/babycorn/make_env/data_analytics.R')
setwd("C:/anyela/repo/babycorn/make_env")
source('C:/anyela/repo/babycorn/make_env/data_analytics.R')
search_query = list()
search_query$l = 'https://power.larc.nasa.gov/cgi-bin/agro.cgi?email=&step=1'
search_query$lat = 30.9860
search_query$lon = 75.7635
search_query$ms  = 2
search_query$ds = 1
search_query$ys = 2008
search_query$me = 10
search_query$de = 31
search_query$ye = 2016
rawdata <- getNASAData(search_query)
subdata <- getAverage(rawdata, 31, 305, 2016)
#' preprocessweatherdata
#' @param sdata raw weather data
preprocessweatherdata <- function(sdata, filename){
sdata <- data.frame(sdata, VAP = sapply(as.numeric(rownames(sdata)), function(x)
calcAVP(sdata$RH2M[x], sdata$TMAX[x], sdata$TMIN[x])))
sdata <- data.frame(sdata, date = sapply(as.numeric(rownames(sdata)), function(x)
changetodate(sdata$WEYR[x], sdata$WEDAY[x])))
sdata$SRAD <- sdata$SRAD * 1000
write.table(sdata[, c('date', 'SRAD', 'TMIN', 'TMAX', 'VAP', 'WIND', 'RAIN' )],
file=filename, sep=',', quote=FALSE)
}
preprocessweatherdata(subdata, 'babycorn/ff_2016_trial.csv')
setwd("C:/anyela/repo/interpolate_weather")
d2m2 <- read.csv('inter_d2m2016-01-31.csv') ## Add dummy line
tisr <- read.csv('inter_tisr2016-01-31.csv') ## Add dummy line
ix = 1
ix = 1
f <- filter(d2m2, lat == d2m2$lat[ix], lon == d2m2$lon[ix] )
f1 <- filter(tisr, lat == tisr$lat[ix], lon == tisr$lon[ix] )
v <- cbind(date = names(f)[4:length(f)],
t2m = as.numeric(f[4:length(f)]),
Tpp = as.numeric(f1[4:34])) # 34 because of the extra day
head(f)
v <- cbind(date = names(f)[4:33],
t2m = as.numeric(f[4:33]),
Tpp = as.numeric(f1[4:33])) # 34 because of the extra day
print(head(v))
v <- cbind(date = names(f)[4:33],
d2m2 = as.numeric(f[4:33]),
tisr = as.numeric(f1[4:33])) # 34 because of the extra day
head(v)
setwd("C:/anyela/repo/babycorn/make_env")
as.Date('2016-02-14')
as.Date('2016-02-14') + 94
45*4
as.Date('2016-02-14') + 15
as.Date('2016-02-14') + 25
as.Date('2016-02-14') + 40
getwd()
system('python babycornff.py')
system('python babycornff.py')
system('python babycornff.py')
system('python babycornff.py')
system('python babycornff.py')
system('python babycornff.py')
#' get average for a range of years when rain data isn't available
#' @param fs DOY start
#' @param fe DOY end
#' @param yt to extract and get average
getAverage <- function(sdata, fs, fe, yf){
w <- filter(sdata, WEDAY >fs & WEDAY < fe)
ww <- aggregate(RAIN ~ WEDAY, data = w, FUN = 'mean')
subset <- filter(w, WEYR == yf)
subset$RAIN <- 0.0
return(subset)
}
source('C:/anyela/repo/babycorn/make_env/data_analytics.R')
search_query = list()
search_query$l = 'https://power.larc.nasa.gov/cgi-bin/agro.cgi?email=&step=1'
search_query$lat = 30.9860
search_query$lon = 75.7635
search_query$ms  = 2
search_query$ds = 1
search_query$ys = 2008
search_query$me = 10
search_query$de = 31
search_query$ye = 2016
rawdata <- getNASAData(search_query)
subdata <- getAverage(rawdata, 31, 305, 2016)
preprocessweatherdata(subdata, 'babycorn/ff_2016_trial.csv')
system('python babycornff.py')
system('python babycornff.py')
system('python babycornff.py')
View(subdata)
system('python babycornff.py')
system('python babycornff.py')
system('python babycornff.py')
system('python babycornff.py')
system('python babycornff.py')
View(rawdata)
system('python babycornff.py')
system('python babycornff.py')
pdf('babycornff_trials.pdf')
par(mfrow=c(3,2))
for(i in 1:1){
fname = paste('lintul3_babycorn_N', i, '.csv', sep='')
m <- visualiseModelData(fname, paste('T', i, sep=''))
print(paste(round(max(m$LAI),2), max(m$NUPTT),  round(max(m$TAGBM)/100),sep=' : '))
}
dev.off()
pdf('babycornff_trials.pdf')
par(mfrow=c(3,2))
for(i in 1:1){
fname = paste('lintul3_babycornff_s', i, '.csv', sep='')
m <- visualiseModelData(fname, paste('T', i, sep=''))
print(paste(round(max(m$LAI),2), max(m$NUPTT),  round(max(m$TAGBM)/100),sep=' : '))
}
dev.off()
system('python babycornff.py')
getwd()
pdf('babycornff_trials.pdf')
par(mfrow=c(3,2))
for(i in 1:1){
fname = paste('lintul3_babycornff_sd', i, '.csv', sep='')
m <- visualiseModelData(fname, paste('T', i, sep=''))
print(paste(round(max(m$LAI),2), max(m$NUPTT),  round(max(m$TAGBM)/100),sep=' : '))
}
dev.off()
system('python babycornff.py')
pdf('babycornff_trials.pdf')
par(mfrow=c(3,2))
for(i in 1:1){
fname = paste('lintul3_babycornff_sd', i, '.csv', sep='')
m <- visualiseModelData(fname, paste('T', i, sep=''))
print(paste(round(max(m$LAI),2), max(m$NUPTT),  round(max(m$TAGBM)/100),sep=' : '))
}
dev.off()
as.Date('2016-03-17') + 82
as.Date('2016-03-17') + 15
as.Date('2016-03-17') + 25
as.Date('2016-03-17') + 40
ystem('python babycornff.py')
pdf('babycornff_trials.pdf')
par(mfrow=c(3,2))
for(i in 1:2){
fname = paste('lintul3_babycornff_sd', i, '.csv', sep='')
m <- visualiseModelData(fname, paste('T', i, sep=''))
print(paste(round(max(m$LAI),2), max(m$NUPTT),  round(max(m$TAGBM)/100),sep=' : '))
}
dev.off()
system('python babycornff.py')
pdf('babycornff_trials.pdf')
par(mfrow=c(3,2))
for(i in 1:2){
fname = paste('lintul3_babycornff_sd', i, '.csv', sep='')
m <- visualiseModelData(fname, paste('T', i, sep=''))
print(paste(round(max(m$LAI),2), max(m$NUPTT),  round(max(m$TAGBM)/100),sep=' : '))
}
dev.off()
system('python test.py')
system('python test.py')
system('python test.py')
system('python test.py')
system('python test.py')
system('python babycornff.py')
system('python babycornff.py')
system('python test.py')
system('python test.py')
system('python test.py')
system('python test.py')
system('python test.py')
system('python test.py')
system('python test.py')
system('python test.py')
system('python test.py')
system('python test.py')
system('python test.py')
system('python test.py')
system('python test.py')
system('python test.py')
system('python test.py')
system('python test.py')
system('python test.py')
system('python test.py')
system('python test.py')
system('python test.py')
system('python test.py')
system('python test.py')
system('python test.py')
system('python test.py')
system('python test.py')
system('python test.py'); ca
system('python test.py'); system('cat file.txt');
system('python test.py'); system('cat file.txt');
system('python test.py'); system('cat file.txt');
system('python test.py'); system('cat file.txt');
system('python test.py'); system('cat file.txt');
system('python test.py'); system('cat file.txt');
system('python test.py'); system('cat file.txt');
system('python test.py'); system('cat file.txt');
system('python test.py'); system('cat file.txt');
system('python test.py'); system('cat file.txt');
system('python test.py'); system('cat file.txt');
system('python test.py'); system('cat file.txt');
system('python test.py'); system('cat file.txt');
system('python test.py'); system('cat file.txt');
system('python test.py'); system('cat file.txt');
system('python test.py'); system('cat file.txt');
system('python test.py'); system('cat file.txt');
system('python test.py'); system('cat file.txt');
system('python test.py'); system('cat file.txt');
system('python test.py'); system('cat file.txt');
system('python test.py'); system('cat file.txt');
system('python test.py'); system('cat file.txt');
system('python test.py'); system('cat file.txt');
system('python test.py'); system('cat file.txt');
system('python test.py'); system('cat file.txt');
system('python test.py'); system('cat file.txt');
system('python test.py'); system('cat file.txt');
system('python test.py'); system('cat file.txt');
system('python test.py'); system('cat file.txt');
system('python test.py'); system('cat file.txt');
system('python test.py'); system('cat file.txt');
system('python test.py'); system('cat file.txt');
system('python test.py'); system('cat file.txt');
system('python test.py'); system('cat file.txt');
system('python test.py'); system('cat file.txt');
system('python test.py'); system('cat file.txt');
system('python test.py'); system('cat file.txt');
system('python test.py'); system('cat file.txt');
system('python test.py'); system('cat file.txt');
system('python test.py'); system('cat file.txt');
system('python test.py'); system('cat file.txt');
system('python test.py'); system('cat file.txt');
system('python test.py'); system('cat file.txt');
system('python test.py'); system('cat file.txt');
system('python test.py'); system('cat file.txt');
system('python test.py'); system('cat file.txt');
system('python test.py'); system('cat file.txt');
system('python test.py'); system('cat file.txt');
system('python test.py'); system('cat file.txt');
system('python babycornff.py')
system('python test.py'); system('cat file.txt');
system('python test.py'); system('cat file.txt');
system('python test.py'); system('cat file.txt');
system('python test.py'); system('cat file.txt');
system('python test.py'); system('cat file.txt');
system('python test.py'); system('cat file.txt');
system('python test.py'); system('cat file.txt');
system('python test.py'); system('cat file.txt');
system('python test.py'); system('cat file.txt');
system('python test.py'); system('cat file.txt');
system('python test.py'); system('cat file.txt');
setwd("C:/anyela/projects/scrapper")
system("webscrapper.js")
system("webscrapper.js")
getwd()
getwd()
system("webscrapper.js")
system("webscrapper.js")
system("webscrapper.js")
system("webscrapper.js")
system("webscrapper.js")
system("./webscrapper.js")
system("./phantomjs webscrapper.js")
system(".phantomjs webscrapper.js")
system("./phantomjs")
system("./phantomjs")
system("./phantomjs")
system("./phantomjs")
system("phantomjs")
